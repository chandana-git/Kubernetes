Learning Objectives:-
Create a yaml file containing the pod spec for the nginx pod.
Create the pod.


Your company is getting ready to launch a new website, and they need you to set up an nginx web server in their Kubernetes cluster. The nginx server will need to be accessible via network in the future, so you will need to expose port 80 as a containerPort for the nginx container. Your team has also asked you to ensure that nginx runs in quiet mode for the time being to cut down on unnecessary log output. You can do this by setting the command to nginx and passing the following arg to the container: -g daemon off; -q. As this nginx server belongs to the Web team, you will need to create it in the team's web namespace.

To summarize:

Use the nginx container image.
The container needs a containerPort of 80.
Set the command to nginx
Pass in the -g daemon off; -q args to run nginx in quiet mode.
Create the pod in the web namespace.
Once the pod is created, you should be able to find it with kubectl get pods -n web. Once the pod is created, you can get more information about its current status with kubectl describe pod nginx -n web.
=========================================================================================
#Creating a namespace

$ kubectl create ns web
namespace/web created
$ kubectl get ns
NAME              STATUS   AGE
default           Active   16m
kube-node-lease   Active   16m
kube-public       Active   16m
kube-system       Active   16m
web               Active   3s


#Create a yaml file containing the pod spec for the nginx pod.

$ vim nginx.yml
nginx.yml
=-----------------=
apiVersion: v1
kind: Pod
metadata:
 name: nginx-pod
 labels:
  app: nginx-app
spec:
 containers:
  - name: nginx-ctr
    image: nginx
    command: ["nginx"]
    args: ["-g","daemon off;","-q"]
    ports:
     - containerPort: 80

#Create the pod.

$ kubectl create -n web -f nginx.yml
pod/nginx-pod created

$ kubectl get pods
No resources found in default namespace.
$ kubectl get pods - web
Error from server (NotFound): pods "-" not found
Error from server (NotFound): pods "web" not found
$ kubectl get pods -n web
NAME        READY   STATUS    RESTARTS   AGE
nginx-pod   1/1     Running   0          84s

#Once the pod is created, you should be able to find it with kubectl get pods -n web. Once the pod is created, you can get more information about its current status with kubectl describe pod nginx -n web.
$ kubectl describe pods -n web
Name:         nginx-pod
Namespace:    web
Priority:     0
Node:         minikube/172.17.0.53
Start Time:   Wed, 27 May 2020 05:15:02 +0000
Labels:       app=nginx-app
Annotations:  <none>
Status:       Running
IP:           172.18.0.4
IPs:
  IP:  172.18.0.4
Containers:
  nginx-ctr:
    Container ID:  docker://14ff72a4983ccdf48e3c3a8a1965ca923e251e10a15320b59cbe6f63de0b5048
    Image:         nginx
    Image ID:      docker-pullable://nginx@sha256:30dfa439718a17baafefadf16c5e7c9d0a1cde97b4fd84f63b69e13513be7097
    Port:          80/TCP
    Host Port:     0/TCP
    Command:
      nginx
    Args:
      -g
      daemon off;
      -q
    State:          Running
      Started:      Wed, 27 May 2020 05:15:15 +0000
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-r2p9d (ro)
Conditions:
  Type              Status
  Initialized       True
  Ready             True
  ContainersReady   True
  PodScheduled      True
Volumes:
  default-token-r2p9d:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  default-token-r2p9d
    Optional:    false
QoS Class:       BestEffort
Node-Selectors:  <none>
Tolerations:     node.kubernetes.io/not-ready:NoExecute for 300s
                 node.kubernetes.io/unreachable:NoExecute for 300s
Events:
  Type    Reason     Age   From               Message
  ----    ------     ----  ----               -------
  Normal  Scheduled  96s   default-scheduler  Successfully assigned web/nginx-pod to minikube
  Normal  Pulling    95s   kubelet, minikube  Pulling image "nginx"
  Normal  Pulled     84s   kubelet, minikube  Successfully pulled image "nginx"
  Normal  Created    83s   kubelet, minikube  Created container nginx-ctr
  Normal  Started    83s   kubelet, minikube  Started container nginx-ctr